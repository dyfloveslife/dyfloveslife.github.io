<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AbstractQueuedSynchronizer on Carol&#39;s blog</title>
    <link>http://localhost:1313/tags/AbstractQueuedSynchronizer/</link>
    <description>Recent content in AbstractQueuedSynchronizer on Carol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 May 2020 11:35:11 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/AbstractQueuedSynchronizer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 中的 AQS</title>
      <link>http://localhost:1313/2020/05/01/Java-AQS/</link>
      <pubDate>Fri, 01 May 2020 11:35:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/05/01/Java-AQS/</guid>
      <description>&lt;p&gt;之前的&lt;a href=&#34;https://dyfloveslife.github.io/2020/04/05/Java-Lock/&#34;&gt;《Java 中的 Lock 及各种锁的概念》&lt;/a&gt;简单介绍了 Lock 的使用以及 Lock 的唯一实现类 ReentrantLock 中的方法。我们一般会拿 &lt;a href=&#34;https://dyfloveslife.github.io/2020/04/05/Java-Synchronized/&#34;&gt;synchronized&lt;/a&gt; 和 ReentrantLock 做比较。而在了解 ReentrantLock 之前需要理解 AQS 的实现。因此，本文分析了 AQS 中主要的源码，包括独占模式与共享模式，为更好的认识 ReentrantLock 打下基础。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>