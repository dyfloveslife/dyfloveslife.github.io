<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Carol&#39;s blog</title>
    <link>http://localhost:1313/tags/Algorithm/</link>
    <description>Recent content in Algorithm on Carol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Carol</copyright>
    <lastBuildDate>Wed, 26 Aug 2020 19:21:02 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/Algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>最短路径问题</title>
      <link>http://localhost:1313/2020/08/26/alg-Shortest-Path-Problem/</link>
      <pubDate>Wed, 26 Aug 2020 19:21:02 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/08/26/alg-Shortest-Path-Problem/</guid>
      <description>&lt;p&gt;最近在参加秋招，笔试的过程中发现又不少公司喜欢考最短路径问题，例如完美世界、大疆等。现在再来总结复习一下这些板子题，希望下次再遇到这种类型的题之也后能 AC。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法题：恢复空格</title>
      <link>http://localhost:1313/2020/07/09/alg-re-space-LCCI/</link>
      <pubDate>Thu, 09 Jul 2020 21:24:02 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/07/09/alg-re-space-LCCI/</guid>
      <description>&lt;p&gt;本文详细解释《程序员面试金典》中的&lt;a href=&#34;https://leetcode-cn.com/problems/re-space-lcci/&#34;&gt;《恢复空格》&lt;/a&gt;一题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>http://localhost:1313/2020/06/01/sort-algorithm/</link>
      <pubDate>Mon, 01 Jun 2020 08:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/06/01/sort-algorithm/</guid>
      <description>&lt;p&gt;本文用于将常见的排序算法做一个总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KMP 算法</title>
      <link>http://localhost:1313/2020/02/18/kmp/</link>
      <pubDate>Tue, 18 Feb 2020 19:26:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/02/18/kmp/</guid>
      <description>&lt;p&gt;KMP 算法适用于求解字符串匹配的问题，网上有许多&lt;a href=&#34;https://www.google.com/search?q=Knuth-Morris-Pratt+algorithm&#34;&gt;文章&lt;/a&gt;对它都有详细的解释，之前在学习&lt;a href=&#34;https://book.douban.com/subject/1101779/&#34;&gt;数据结构&lt;/a&gt;的时候也对该算法有些了解，但一直没怎么总结。先将其进行回顾，并写下此文，以作备忘。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 圆圈中最后剩下的数字（约瑟夫环问题）</title>
      <link>http://localhost:1313/2019/12/27/offer-Josephus/</link>
      <pubDate>Fri, 27 Dec 2019 09:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/12/27/offer-Josephus/</guid>
      <description>&lt;p&gt;《剑指 Offer》中涉及到了约瑟夫环问题，虽然下面文章中所描述的和书中的题目有些差异，但从总体上看，都涉及到了约瑟夫环问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 最长不含重复字符的子字符串</title>
      <link>http://localhost:1313/2019/12/11/offer-longest-SubString-Without-Duplication/</link>
      <pubDate>Wed, 11 Dec 2019 16:47:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/12/11/offer-longest-SubString-Without-Duplication/</guid>
      <description>&lt;p&gt;本文是对解题思路的整理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 数字序列中某一位的数字</title>
      <link>http://localhost:1313/2019/11/29/offer-DigitsInSequence/</link>
      <pubDate>Fri, 29 Nov 2019 19:23:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/11/29/offer-DigitsInSequence/</guid>
      <description>&lt;p&gt;这道题目和&lt;a href=&#34;https://dyfloveslife.github.io/2019/11/28/offer-NumberOf1Between1AndN/&#34;&gt;《剑指 Offer 之 从整数 1 到 n 中 1 出现的次数》&lt;/a&gt;是一样的，也是通过寻找数字序列的规律解决的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 从整数 1 到 n 中 1 出现的次数</title>
      <link>http://localhost:1313/2019/11/28/offer-NumberOf1Between1AndN/</link>
      <pubDate>Thu, 28 Nov 2019 15:26:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/11/28/offer-NumberOf1Between1AndN/</guid>
      <description>&lt;p&gt;该题是剑指 Offer 中一道考验分析数字规律的题，在 LeetCode 上看到一种十分巧妙的方法，为此在这里记录一下，以便日后复习。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 数组中重复的数字</title>
      <link>http://localhost:1313/2019/09/11/offer-FindDuplicationInArray/</link>
      <pubDate>Wed, 11 Sep 2019 21:32:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-FindDuplicationInArray/</guid>
      <description>&lt;p&gt;在一个长度为 &lt;code&gt;n&lt;/code&gt; 的数组里的所有数字都在 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;n-1&lt;/code&gt; 的范围内。数组中某些数字是重复的，但不知道有几个数字是重复的，也不知道每个数字重复几次。请找出数组中任意一个重复的数字。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 二叉树的下一个节点</title>
      <link>http://localhost:1313/2019/09/11/offer-NextNodeInBinaryTrees/</link>
      <pubDate>Wed, 11 Sep 2019 16:26:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-NextNodeInBinaryTrees/</guid>
      <description>&lt;p&gt;给定一棵二叉树和其中的一个节点，找出中序遍历顺序的下一个节点。树中的节点除了有两个分别指向左右子节点的指针以外，还有一个指向父节点的指针。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 从尾到头打印链表</title>
      <link>http://localhost:1313/2019/09/11/offer-PrintListInReversedOrder/</link>
      <pubDate>Wed, 11 Sep 2019 15:30:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-PrintListInReversedOrder/</guid>
      <description>&lt;p&gt;输入一个链表，从尾到头反过来打印出每个结点的值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 替换空格</title>
      <link>http://localhost:1313/2019/09/11/offer-ReplaceSpaces/</link>
      <pubDate>Wed, 11 Sep 2019 14:57:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-ReplaceSpaces/</guid>
      <description>&lt;p&gt;请实现一个函数，把字符串中的每个空格替换成 &lt;code&gt;%20&lt;/code&gt;。例如输入 &lt;code&gt;We are happy.&lt;/code&gt;，则输出 &lt;code&gt;We%20are%20happy.&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 二维数组中的查找</title>
      <link>http://localhost:1313/2019/09/11/offer-FindInPartiallySortedMatrix/</link>
      <pubDate>Wed, 11 Sep 2019 14:31:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-FindInPartiallySortedMatrix/</guid>
      <description>&lt;p&gt;在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指 Offer 之 重建二叉树</title>
      <link>http://localhost:1313/2019/09/11/offer-ConstructBinaryTree/</link>
      <pubDate>Wed, 11 Sep 2019 10:48:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/09/11/offer-ConstructBinaryTree/</guid>
      <description>&lt;p&gt;输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列 &lt;code&gt;{1, 2, 4, 7, 3, 5, 6, 8}&lt;/code&gt; 和中序遍历序列&lt;code&gt;{4, 7, 2, 1, 5, 3, 8, 6}&lt;/code&gt;，则重建出二叉树并输出它的头结点。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
