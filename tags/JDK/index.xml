<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JDK on Carol&#39;s blog</title>
    <link>http://localhost:1313/tags/JDK/</link>
    <description>Recent content in JDK on Carol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Mar 2020 14:02:11 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/JDK/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 容器之 ConcurrentHashMap</title>
      <link>http://localhost:1313/2020/03/24/JavaSrc-ConcurrentHashMap/</link>
      <pubDate>Tue, 24 Mar 2020 14:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/24/JavaSrc-ConcurrentHashMap/</guid>
      <description>&lt;p&gt;ConcurrentHashMap 是 HashMap 的一个线程安全并且支持高并发的版本，之前的文章&lt;a href=&#34;https://dyfloveslife.github.io/2020/02/12/JavaSrc-HashMap/&#34;&gt;《Java 容器之 HashMap》&lt;/a&gt;从 HashMap 的实现原理到各个方法的使用，以及每个方法各自的具体实现都分别进行了介绍，并将 JDK1.7 与 JDK1.8 中的 HashMap 进行了对比。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 中的 Thread</title>
      <link>http://localhost:1313/2020/03/17/JavaSrc-Thread/</link>
      <pubDate>Tue, 17 Mar 2020 16:35:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/17/JavaSrc-Thread/</guid>
      <description>&lt;p&gt;本文主要介绍 Thread 类中线程的六种状态以及各状态之间转换的方法，如 wait()、start()、run()、sleep() 等。在阐述线程的生命周期的同时，解释各个方法是如何使线程的状态进行转换的，以及在转换的过程中是否需要释放锁等问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 容器之 HashTable</title>
      <link>http://localhost:1313/2020/03/11/JavaSrc-HashTable/</link>
      <pubDate>Wed, 11 Mar 2020 19:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/11/JavaSrc-HashTable/</guid>
      <description>&lt;p&gt;前文对 JDK1.8 中的 &lt;a href=&#34;https://dyfloveslife.github.io/2020/02/12/JavaSrc-HashMap/&#34;&gt;HashMap&lt;/a&gt; 的在原理实现以及相关操作进行了说明，介绍了基于&lt;code&gt;数组（Node）+链表（尾插）+红黑树&lt;/code&gt;的数据结构，以及&lt;code&gt;resize()&lt;/code&gt;的过程。而本文将介绍与 HashMap 较为相似的&lt;code&gt;HashTable&lt;/code&gt;，同样也是基于&lt;code&gt;数组（Entry）+链表&lt;/code&gt;实现的，但&lt;code&gt;HashTable&lt;/code&gt;是线程同步的（synchroinzed），在某些方面又有一些区别，下面将分别介绍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK 源码之集合类 LinkedHashMap</title>
      <link>http://localhost:1313/2020/03/10/JavaSrc-LinkedHashMap/</link>
      <pubDate>Tue, 10 Mar 2020 15:09:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/10/JavaSrc-LinkedHashMap/</guid>
      <description>&lt;p&gt;本文是对 JDK1.8 中 LinkedHashMap 的分析与总结，在阅读源码的同时加深对其提供的方法的使用，以便更好的理解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK 源码之集合类 LinkedList</title>
      <link>http://localhost:1313/2020/03/07/JavaSrc-LinkedList/</link>
      <pubDate>Sat, 07 Mar 2020 19:20:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/07/JavaSrc-LinkedList/</guid>
      <description>&lt;p&gt;本文是对 JDK1.8 中 LinkedList 的分析与总结，在阅读源码的同时加深对其提供的方法的使用，以便更好的理解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK 源码之集合类 ArrayList</title>
      <link>http://localhost:1313/2020/03/04/JavaSrc-ArrayList/</link>
      <pubDate>Wed, 04 Mar 2020 15:20:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/03/04/JavaSrc-ArrayList/</guid>
      <description>&lt;p&gt;本文是对 JDK1.8 中 ArrayList 的分析与总结，在阅读源码的同时加深对其提供的方法的使用，以便更好的理解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 容器之 HashMap</title>
      <link>http://localhost:1313/2020/02/12/JavaSrc-HashMap/</link>
      <pubDate>Wed, 12 Feb 2020 17:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/02/12/JavaSrc-HashMap/</guid>
      <description>&lt;p&gt;HapMap 中的 get 和 put 方法在 O(1) 的时间内即可完成，如此快速存取方式到底是怎么实现的？本文将对 HashMap 中的主要方法（get、put、resize）进行说明，对应的版本为 JDK 1.8。不过，为了更加详细的了解 HashMap 的优化过程，同时也会与 JDK 1.7 中的 HashMap 进行比较，从而对 HashMap 有一个较为全面的认识。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK 源码之基础类 Integer</title>
      <link>http://localhost:1313/2019/12/13/JavaSrc-BasicClass-Integer/</link>
      <pubDate>Fri, 13 Dec 2019 21:20:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/12/13/JavaSrc-BasicClass-Integer/</guid>
      <description>&lt;p&gt;本片文章主要介绍 Integer 类中一些比较常用的方法，并分析该类在 Java 中的作用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JDK 源码之基础类 Object</title>
      <link>http://localhost:1313/2019/12/04/JavaSrc-BasicClass-Object/</link>
      <pubDate>Wed, 04 Dec 2019 18:02:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2019/12/04/JavaSrc-BasicClass-Object/</guid>
      <description>&lt;p&gt;主要介绍 Java 中 Object 类的常见方法，通过阅读源码的方式加深对各种方法的理解。如有错误，欢迎在评论中和我一起讨论交流。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>