<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ThreadLocal on Carol&#39;s blog</title>
    <link>http://localhost:1313/tags/ThreadLocal/</link>
    <description>Recent content in ThreadLocal on Carol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Carol</copyright>
    <lastBuildDate>Mon, 13 Apr 2020 15:35:11 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/ThreadLocal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java 中的 ThreadLocal</title>
      <link>http://localhost:1313/2020/04/13/Java-ThreadLocal/</link>
      <pubDate>Mon, 13 Apr 2020 15:35:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/04/13/Java-ThreadLocal/</guid>
      <description>&lt;p&gt;使用 Java 中的 ThreadLocal 类可以创建只能由同一个线程读写的变量。也就是说，即使两个线程在执行相同的代码，并且代码中都有对同一个 ThreadLocal 变量的引用，那么这两个线程也不会看到对方的 ThreadLocal 变量。因此，Java 中的 ThreadLocal 类提供了一种简单的方式来使代码中的线程变得更加安全。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>