<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notify on Carol&#39;s blog</title>
    <link>http://localhost:1313/tags/notify/</link>
    <description>Recent content in notify on Carol&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Carol</copyright>
    <lastBuildDate>Tue, 07 Apr 2020 22:10:11 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/notify/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>线程间的通信机制</title>
      <link>http://localhost:1313/2020/04/07/Java-Inter-thread-communication/</link>
      <pubDate>Tue, 07 Apr 2020 22:10:11 +0800</pubDate>
      
      <guid>http://localhost:1313/2020/04/07/Java-Inter-thread-communication/</guid>
      <description>&lt;p&gt;之前的文章，比如在多线程环境中使用 &lt;a href=&#34;https://dyfloveslife.github.io/2020/04/05/Java-Synchronized/&#34;&gt;synchronized&lt;/a&gt; 和 &lt;a href=&#34;https://dyfloveslife.github.io/2020/04/05/Java-Lock/&#34;&gt;Lock&lt;/a&gt; 可以通过锁的方式实现线程之间的同步互斥访问临界资源。也就是说，只有当一个线程释放了锁之后，另一个线程才能获得锁，从而对数据进行操作。但在有些情况下，需要多个线程之间进行协作，以使得多个线程可以一起去解决某个问题，此时就需要采用线程通信-协作机制。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>